I+00000.027: Darwin-21.3.0-x86_64-i386-64bit x86_64
             CPython 3.7.13 (64-bit)
             debugpy 1.6.0

I+00000.034: debugpy.adapter startup environment:
             
             System paths:
                 sys.prefix: /Users/PXH050/miniconda/envs/atlas-env
                 sys.base_prefix: /Users/PXH050/miniconda/envs/atlas-env
                 sys.real_prefix: <missing>
                 site.getsitepackages(): /Users/PXH050/miniconda/envs/atlas-env/lib/python3.7/site-packages
                 site.getusersitepackages(): /Users/PXH050/.local/lib/python3.7/site-packages
                 sys.path (site-packages): /Users/PXH050/miniconda/envs/atlas-env/lib/python3.7/site-packages
                 sysconfig.get_path('stdlib'): /Users/PXH050/miniconda/envs/atlas-env/lib/python3.7
                 sysconfig.get_path('platstdlib'): /Users/PXH050/miniconda/envs/atlas-env/lib/python3.7
                 sysconfig.get_path('purelib'): /Users/PXH050/miniconda/envs/atlas-env/lib/python3.7/site-packages
                 sysconfig.get_path('platlib'): /Users/PXH050/miniconda/envs/atlas-env/lib/python3.7/site-packages
                 sysconfig.get_path('include'): /Users/PXH050/miniconda/envs/atlas-env/include/python3.7m
                 sysconfig.get_path('scripts'): /Users/PXH050/miniconda/envs/atlas-env/bin
                 sysconfig.get_path('data'): /Users/PXH050/miniconda/envs/atlas-env
                 os.__file__: /Users/PXH050/miniconda/envs/atlas-env/lib/python3.7/os.py
                 threading.__file__: /Users/PXH050/miniconda/envs/atlas-env/lib/python3.7/threading.py

I+00000.035: Listening for incoming Client connections on 127.0.0.1:5678...

I+00000.035: Listening for incoming Server connections on 127.0.0.1:56736...

I+00000.035: Sending endpoints info to debug server at localhost:56735:
             {
                 "client": {
                     "host": "127.0.0.1",
                     "port": 5678
                 },
                 "server": {
                     "host": "127.0.0.1",
                     "port": 56736
                 }
             }

I+00000.040: Accepted incoming Server connection from 127.0.0.1:56738.

D+00000.040: Starting message loop for channel Server[?]

D+00000.040: Server[?] <-- {
                 "seq": 1,
                 "type": "request",
                 "command": "pydevdAuthorize",
                 "arguments": {
                     "debugServerAccessToken": "c8e41b19ef54d3007d69c5c8108f14e46a252b5886d0f5fc79565dd8d8516b93"
                 }
             }

D+00000.041: Server[?] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 2,
                 "type": "response",
                 "request_seq": 1,
                 "success": true,
                 "command": "pydevdAuthorize",
                 "body": {
                     "clientAccessToken": null
                 }
             }

D+00000.041: Server[?] <-- {
                 "seq": 2,
                 "type": "request",
                 "command": "pydevdSystemInfo"
             }

D+00000.042: Server[?] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 4,
                 "type": "response",
                 "request_seq": 2,
                 "success": true,
                 "command": "pydevdSystemInfo",
                 "body": {
                     "python": {
                         "version": "3.7.13final0",
                         "implementation": {
                             "name": "cpython",
                             "version": "3.7.13final0",
                             "description": "CPython"
                         }
                     },
                     "platform": {
                         "name": "darwin"
                     },
                     "process": {
                         "pid": 1526,
                         "ppid": 1525,
                         "executable": "/Users/PXH050/miniconda/envs/atlas-env/bin/python",
                         "bitness": 64
                     },
                     "pydevd": {
                         "usingCython": true,
                         "usingFrameEval": false
                     }
                 }
             }

D+00000.042: Server[pid=1526] <-- {
                 "seq": 3,
                 "type": "request",
                 "command": "evaluate",
                 "arguments": {
                     "expression": "\nif 'debugpy' not in sys.modules:\n    sys.path.insert(0, '/Users/PXH050/miniconda/envs/atlas-env/lib/python3.7/site-packages')\n    try:\n        import debugpy\n    finally:\n        del sys.path[0]\n"
                 }
             }

D+00000.145: Server[pid=1526] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 6,
                 "type": "response",
                 "request_seq": 3,
                 "success": true,
                 "command": "evaluate",
                 "body": {
                     "result": "",
                     "variablesReference": 0,
                     "presentationHint": {}
                 }
             }

I+00000.146: No active debug session for parent process of Server[pid=1526].

I+00033.850: Accepted incoming Client connection from 127.0.0.1:56740.

D+00033.851: Starting message loop for channel Client[1]

D+00033.851: Client[1] <-- {
                 "seq": 1,
                 "type": "event",
                 "event": "output",
                 "body": {
                     "category": "telemetry",
                     "output": "ptvsd",
                     "data": {
                         "packageVersion": "1.6.0"
                     }
                 }
             }

D+00033.851: Client[1] <-- {
                 "seq": 2,
                 "type": "event",
                 "event": "output",
                 "body": {
                     "category": "telemetry",
                     "output": "debugpy",
                     "data": {
                         "packageVersion": "1.6.0"
                     }
                 }
             }

D+00033.853: Client[1] --> {
                 "seq": 0,
                 "type": "request",
                 "command": "initialize",
                 "arguments": {
                     "adapterID": "nvim-dap",
                     "pathFormat": "path",
                     "columnsStartAt1": true,
                     "linesStartAt1": true,
                     "supportsRunInTerminalRequest": true,
                     "supportsVariableType": true,
                     "locale": "en_US.UTF-8",
                     "clientId": "neovim",
                     "clientname": "neovim"
                 }
             }

D+00033.853: /handling #0 request "initialize" from Client[1]/
             Capabilities: {
                 "supportsVariableType": true,
                 "supportsVariablePaging": false,
                 "supportsRunInTerminalRequest": true,
                 "supportsMemoryReferences": false
             }

D+00033.853: /handling #0 request "initialize" from Client[1]/
             Expectations: {
                 "locale": "en_US.UTF-8",
                 "linesStartAt1": true,
                 "columnsStartAt1": true,
                 "pathFormat": "path"
             }

D+00033.853: /handling #0 request "initialize" from Client[1]/
             Client[1] <-- {
                 "seq": 3,
                 "type": "response",
                 "request_seq": 0,
                 "success": true,
                 "command": "initialize",
                 "body": {
                     "supportsCompletionsRequest": true,
                     "supportsConditionalBreakpoints": true,
                     "supportsConfigurationDoneRequest": true,
                     "supportsDebuggerProperties": true,
                     "supportsDelayedStackTraceLoading": true,
                     "supportsEvaluateForHovers": true,
                     "supportsExceptionInfoRequest": true,
                     "supportsExceptionOptions": true,
                     "supportsFunctionBreakpoints": true,
                     "supportsHitConditionalBreakpoints": true,
                     "supportsLogPoints": true,
                     "supportsModulesRequest": true,
                     "supportsSetExpression": true,
                     "supportsSetVariable": true,
                     "supportsValueFormattingOptions": true,
                     "supportsTerminateDebuggee": true,
                     "supportsGotoTargetsRequest": true,
                     "supportsClipboardContext": true,
                     "exceptionBreakpointFilters": [
                         {
                             "filter": "raised",
                             "label": "Raised Exceptions",
                             "default": false,
                             "description": "Break whenever any exception is raised."
                         },
                         {
                             "filter": "uncaught",
                             "label": "Uncaught Exceptions",
                             "default": true,
                             "description": "Break when the process is exiting due to unhandled exception."
                         },
                         {
                             "filter": "userUnhandled",
                             "label": "User Uncaught Exceptions",
                             "default": false,
                             "description": "Break when exception escapes into library code."
                         }
                     ],
                     "supportsStepInTargetsRequest": true
                 }
             }

D+00033.854: Client[1] --> {
                 "seq": 1,
                 "type": "request",
                 "command": "attach",
                 "arguments": {
                     "request": "attach",
                     "type": "python",
                     "name": "Attach remote",
                     "connect": {
                         "host": "127.0.0.1",
                         "port": 5678
                     }
                 }
             }

I+00033.854: /handling #1 request "attach" from Client[1]/
             Listening for incoming Server connections on 127.0.0.1:56741...

D+00033.855: /handling #1 request "attach" from Client[1]/
             Client[1] <-- {
                 "seq": 4,
                 "type": "event",
                 "event": "debugpyWaitingForServer",
                 "body": {
                     "host": "127.0.0.1",
                     "port": 56741
                 }
             }

I+00033.855: /handling #1 request "attach" from Client[1]/
             Session[1] waiting for connection from debug server...

I+00033.855: /handling #1 request "attach" from Client[1]/
             Attaching Server[pid=1526] to Session[1]

D+00033.855: /handling #1 request "attach" from Client[1]/
             Server[1] <-- {
                 "seq": 4,
                 "type": "request",
                 "command": "pydevdAuthorize",
                 "arguments": {
                     "debugServerAccessToken": "c8e41b19ef54d3007d69c5c8108f14e46a252b5886d0f5fc79565dd8d8516b93"
                 }
             }

D+00033.856: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 8,
                 "type": "response",
                 "request_seq": 4,
                 "success": true,
                 "command": "pydevdAuthorize",
                 "body": {
                     "clientAccessToken": null
                 }
             }

D+00033.856: /handling #1 request "attach" from Client[1]/
             Server[1] <-- {
                 "seq": 5,
                 "type": "request",
                 "command": "initialize",
                 "arguments": {
                     "adapterID": "nvim-dap",
                     "pathFormat": "path",
                     "columnsStartAt1": true,
                     "linesStartAt1": true,
                     "supportsRunInTerminalRequest": true,
                     "supportsVariableType": true,
                     "locale": "en_US.UTF-8",
                     "clientId": "neovim",
                     "clientname": "neovim"
                 }
             }

D+00033.857: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 10,
                 "type": "response",
                 "request_seq": 5,
                 "success": true,
                 "command": "initialize",
                 "body": {
                     "supportsConfigurationDoneRequest": true,
                     "supportsFunctionBreakpoints": true,
                     "supportsConditionalBreakpoints": true,
                     "supportsHitConditionalBreakpoints": true,
                     "supportsEvaluateForHovers": true,
                     "exceptionBreakpointFilters": [
                         {
                             "filter": "raised",
                             "label": "Raised Exceptions",
                             "default": false
                         },
                         {
                             "filter": "uncaught",
                             "label": "Uncaught Exceptions",
                             "default": true
                         },
                         {
                             "filter": "userUnhandled",
                             "label": "User Uncaught Exceptions",
                             "default": false
                         }
                     ],
                     "supportsStepBack": false,
                     "supportsSetVariable": true,
                     "supportsRestartFrame": false,
                     "supportsGotoTargetsRequest": true,
                     "supportsStepInTargetsRequest": true,
                     "supportsCompletionsRequest": true,
                     "completionTriggerCharacters": [],
                     "supportsModulesRequest": true,
                     "additionalModuleColumns": [],
                     "supportedChecksumAlgorithms": [],
                     "supportsRestartRequest": false,
                     "supportsExceptionOptions": true,
                     "supportsValueFormattingOptions": true,
                     "supportsExceptionInfoRequest": true,
                     "supportTerminateDebuggee": true,
                     "supportsDelayedStackTraceLoading": true,
                     "supportsLoadedSourcesRequest": false,
                     "supportsLogPoints": true,
                     "supportsTerminateThreadsRequest": false,
                     "supportsSetExpression": true,
                     "supportsTerminateRequest": true,
                     "supportsDataBreakpoints": false,
                     "supportsReadMemoryRequest": false,
                     "supportsDisassembleRequest": false,
                     "supportsClipboardContext": true,
                     "supportsDebuggerProperties": true,
                     "pydevd": {
                         "processId": 1526
                     }
                 }
             }

D+00033.857: /handling #1 request "attach" from Client[1]/
             Capabilities: {
                 "supportsCompletionsRequest": true,
                 "supportsConditionalBreakpoints": true,
                 "supportsConfigurationDoneRequest": true,
                 "supportsDataBreakpoints": false,
                 "supportsDelayedStackTraceLoading": true,
                 "supportsDisassembleRequest": false,
                 "supportsEvaluateForHovers": true,
                 "supportsExceptionInfoRequest": true,
                 "supportsExceptionOptions": true,
                 "supportsFunctionBreakpoints": true,
                 "supportsGotoTargetsRequest": true,
                 "supportsHitConditionalBreakpoints": true,
                 "supportsLoadedSourcesRequest": false,
                 "supportsLogPoints": true,
                 "supportsModulesRequest": true,
                 "supportsReadMemoryRequest": false,
                 "supportsRestartFrame": false,
                 "supportsRestartRequest": false,
                 "supportsSetExpression": true,
                 "supportsSetVariable": true,
                 "supportsStepBack": false,
                 "supportsStepInTargetsRequest": true,
                 "supportsTerminateDebuggee": false,
                 "supportsTerminateRequest": true,
                 "supportsTerminateThreadsRequest": false,
                 "supportsValueFormattingOptions": true,
                 "exceptionBreakpointFilters": [
                     {
                         "filter": "raised",
                         "label": "Raised Exceptions",
                         "default": false
                     },
                     {
                         "filter": "uncaught",
                         "label": "Uncaught Exceptions",
                         "default": true
                     },
                     {
                         "filter": "userUnhandled",
                         "label": "User Uncaught Exceptions",
                         "default": false
                     }
                 ],
                 "additionalModuleColumns": [],
                 "supportedChecksumAlgorithms": []
             }

D+00033.857: /handling #1 request "attach" from Client[1]/
             Server[1] <-- {
                 "seq": 6,
                 "type": "request",
                 "command": "attach",
                 "arguments": {
                     "request": "attach",
                     "type": "python",
                     "name": "Attach remote",
                     "connect": {
                         "host": "127.0.0.1",
                         "port": 5678
                     }
                 }
             }

D+00033.858: Server[1] --> {
                 "pydevd_cmd_id": 204,
                 "seq": 12,
                 "type": "event",
                 "event": "process",
                 "body": {
                     "name": "/Users/PXH050/miniconda/envs/atlas-env/bin/flask",
                     "systemProcessId": 1526,
                     "isLocalProcess": true,
                     "startMethod": "attach"
                 }
             }

D+00033.858: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 14,
                 "type": "response",
                 "request_seq": 6,
                 "success": true,
                 "command": "attach"
             }

D+00033.859: /handling #1 request "attach" from Client[1]/
             Server[1] <-- {
                 "seq": 7,
                 "type": "request",
                 "command": "setDebuggerProperty",
                 "arguments": {
                     "skipSuspendOnBreakpointException": [
                         "BaseException"
                     ],
                     "skipPrintBreakpointException": [
                         "NameError"
                     ],
                     "multiThreadsSingleNotification": true,
                     "ideOS": "UNIX"
                 }
             }

D+00033.859: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 16,
                 "type": "response",
                 "request_seq": 7,
                 "success": true,
                 "command": "setDebuggerProperty",
                 "body": {}
             }

D+00033.859: /handling #1 request "attach" from Client[1]/
             Client[1] <-- {
                 "seq": 5,
                 "type": "event",
                 "event": "initialized"
             }

D+00033.859: /handling #12 event "process" from Server[1]/
             Propagation deferred.

D+00033.860: Client[1] --> {
                 "seq": 2,
                 "type": "request",
                 "command": "setBreakpoints",
                 "arguments": {
                     "breakpoints": [
                         {
                             "line": 10
                         }
                     ],
                     "source": {
                         "path": "/Users/PXH050/Projects/flask-stuff/server/routes.py",
                         "name": "routes.py"
                     },
                     "sourceModified": false,
                     "lines": [
                         10
                     ]
                 }
             }

D+00033.860: /handling #2 request "setBreakpoints" from Client[1]/
             Server[1] <-- {
                 "seq": 8,
                 "type": "request",
                 "command": "setBreakpoints",
                 "arguments": {
                     "breakpoints": [
                         {
                             "line": 10
                         }
                     ],
                     "source": {
                         "path": "/Users/PXH050/Projects/flask-stuff/server/routes.py",
                         "name": "routes.py"
                     },
                     "sourceModified": false,
                     "lines": [
                         10
                     ]
                 }
             }

D+00033.862: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 18,
                 "type": "response",
                 "request_seq": 8,
                 "success": true,
                 "command": "setBreakpoints",
                 "body": {
                     "breakpoints": [
                         {
                             "verified": true,
                             "id": 0,
                             "source": {
                                 "name": "routes.py",
                                 "path": "/Users/PXH050/Projects/flask-stuff/server/routes.py"
                             },
                             "line": 10
                         }
                     ]
                 }
             }

D+00033.862: /handling #2 request "setBreakpoints" from Client[1]/
             Client[1] <-- {
                 "seq": 6,
                 "type": "response",
                 "request_seq": 2,
                 "success": true,
                 "command": "setBreakpoints",
                 "body": {
                     "breakpoints": [
                         {
                             "verified": true,
                             "id": 0,
                             "source": {
                                 "name": "routes.py",
                                 "path": "/Users/PXH050/Projects/flask-stuff/server/routes.py"
                             },
                             "line": 10
                         }
                     ]
                 }
             }

D+00033.862: Client[1] --> {
                 "seq": 3,
                 "type": "request",
                 "command": "setExceptionBreakpoints",
                 "arguments": {
                     "filters": [
                         "uncaught"
                     ]
                 }
             }

D+00033.863: /handling #3 request "setExceptionBreakpoints" from Client[1]/
             Server[1] <-- {
                 "seq": 9,
                 "type": "request",
                 "command": "setExceptionBreakpoints",
                 "arguments": {
                     "filters": [
                         "uncaught"
                     ]
                 }
             }

D+00033.863: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 20,
                 "type": "response",
                 "request_seq": 9,
                 "success": true,
                 "command": "setExceptionBreakpoints",
                 "body": {}
             }

D+00033.864: /handling #3 request "setExceptionBreakpoints" from Client[1]/
             Client[1] <-- {
                 "seq": 7,
                 "type": "response",
                 "request_seq": 3,
                 "success": true,
                 "command": "setExceptionBreakpoints"
             }

D+00033.864: Client[1] --> {
                 "seq": 4,
                 "type": "request",
                 "command": "configurationDone"
             }

D+00033.864: /handling #4 request "configurationDone" from Client[1]/
             Server[1] <-- {
                 "seq": 10,
                 "type": "request",
                 "command": "configurationDone"
             }

D+00033.865: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 22,
                 "type": "response",
                 "request_seq": 10,
                 "success": true,
                 "command": "configurationDone"
             }

D+00033.865: /handling #4 request "configurationDone" from Client[1]/
             Client[1] <-- {
                 "seq": 8,
                 "type": "response",
                 "request_seq": 4,
                 "success": true,
                 "command": "configurationDone"
             }

D+00033.865: /handling #4 request "configurationDone" from Client[1]/
             Client[1] <-- {
                 "seq": 9,
                 "type": "response",
                 "request_seq": 1,
                 "success": true,
                 "command": "attach"
             }

D+00033.866: Server[1] --> {
                 "pydevd_cmd_id": 103,
                 "seq": 24,
                 "type": "event",
                 "event": "thread",
                 "body": {
                     "reason": "started",
                     "threadId": 1
                 }
             }

D+00033.866: /handling #4 request "configurationDone" from Client[1]/
             Propagating deferred events to Client[1]...

D+00033.866: /handling #4 request "configurationDone" from Client[1]/
             Propagating deferred #12 event "process" from Server[1]

D+00033.866: /handling #4 request "configurationDone" from Client[1]/
             Client[1] <-- {
                 "seq": 10,
                 "type": "event",
                 "event": "process",
                 "body": {
                     "name": "/Users/PXH050/miniconda/envs/atlas-env/bin/flask",
                     "systemProcessId": 1526,
                     "isLocalProcess": true,
                     "startMethod": "attach"
                 }
             }

I+00033.866: /handling #4 request "configurationDone" from Client[1]/
             All deferred events propagated to Client[1].

D+00033.866: /handling #24 event "thread" from Server[1]/
             Client[1] <-- {
                 "seq": 11,
                 "type": "event",
                 "event": "thread",
                 "body": {
                     "reason": "started",
                     "threadId": 1
                 }
             }

D+00055.587: Client[1] --> {
                 "seq": 5,
                 "type": "request",
                 "command": "setBreakpoints",
                 "arguments": {
                     "breakpoints": [],
                     "source": {
                         "path": "/Users/PXH050/Projects/flask-stuff/server/routes.py",
                         "name": "routes.py"
                     },
                     "sourceModified": false,
                     "lines": []
                 }
             }

D+00055.588: /handling #5 request "setBreakpoints" from Client[1]/
             Server[1] <-- {
                 "seq": 11,
                 "type": "request",
                 "command": "setBreakpoints",
                 "arguments": {
                     "breakpoints": [],
                     "source": {
                         "path": "/Users/PXH050/Projects/flask-stuff/server/routes.py",
                         "name": "routes.py"
                     },
                     "sourceModified": false,
                     "lines": []
                 }
             }

D+00055.588: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 26,
                 "type": "response",
                 "request_seq": 11,
                 "success": true,
                 "command": "setBreakpoints",
                 "body": {
                     "breakpoints": []
                 }
             }

D+00055.589: /handling #5 request "setBreakpoints" from Client[1]/
             Client[1] <-- {
                 "seq": 12,
                 "type": "response",
                 "request_seq": 5,
                 "success": true,
                 "command": "setBreakpoints",
                 "body": {
                     "breakpoints": []
                 }
             }

D+00057.417: Client[1] --> {
                 "seq": 6,
                 "type": "request",
                 "command": "setBreakpoints",
                 "arguments": {
                     "breakpoints": [
                         {
                             "line": 15
                         }
                     ],
                     "source": {
                         "path": "/Users/PXH050/Projects/flask-stuff/server/routes.py",
                         "name": "routes.py"
                     },
                     "sourceModified": false,
                     "lines": [
                         15
                     ]
                 }
             }

D+00057.418: /handling #6 request "setBreakpoints" from Client[1]/
             Server[1] <-- {
                 "seq": 12,
                 "type": "request",
                 "command": "setBreakpoints",
                 "arguments": {
                     "breakpoints": [
                         {
                             "line": 15
                         }
                     ],
                     "source": {
                         "path": "/Users/PXH050/Projects/flask-stuff/server/routes.py",
                         "name": "routes.py"
                     },
                     "sourceModified": false,
                     "lines": [
                         15
                     ]
                 }
             }

D+00057.419: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 28,
                 "type": "response",
                 "request_seq": 12,
                 "success": true,
                 "command": "setBreakpoints",
                 "body": {
                     "breakpoints": [
                         {
                             "verified": true,
                             "id": 1,
                             "source": {
                                 "name": "routes.py",
                                 "path": "/Users/PXH050/Projects/flask-stuff/server/routes.py"
                             },
                             "line": 15
                         }
                     ]
                 }
             }

D+00057.420: /handling #6 request "setBreakpoints" from Client[1]/
             Client[1] <-- {
                 "seq": 13,
                 "type": "response",
                 "request_seq": 6,
                 "success": true,
                 "command": "setBreakpoints",
                 "body": {
                     "breakpoints": [
                         {
                             "verified": true,
                             "id": 1,
                             "source": {
                                 "name": "routes.py",
                                 "path": "/Users/PXH050/Projects/flask-stuff/server/routes.py"
                             },
                             "line": 15
                         }
                     ]
                 }
             }

D+00070.110: Server[1] --> {
                 "pydevd_cmd_id": 103,
                 "seq": 30,
                 "type": "event",
                 "event": "thread",
                 "body": {
                     "reason": "started",
                     "threadId": 2
                 }
             }

D+00070.117: /handling #30 event "thread" from Server[1]/
             Client[1] <-- {
                 "seq": 14,
                 "type": "event",
                 "event": "thread",
                 "body": {
                     "reason": "started",
                     "threadId": 2
                 }
             }

D+00070.117: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 32,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "breakpoint",
                     "threadId": 2,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00070.117: /handling #32 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 15,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "breakpoint",
                     "threadId": 2,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00070.118: Client[1] --> {
                 "seq": 7,
                 "type": "request",
                 "command": "threads"
             }

D+00070.118: /handling #7 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 13,
                 "type": "request",
                 "command": "threads"
             }

D+00070.118: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 34,
                 "type": "response",
                 "request_seq": 13,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         },
                         {
                             "id": 2,
                             "name": "Thread-7"
                         }
                     ]
                 }
             }

D+00070.119: /handling #7 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 16,
                 "type": "response",
                 "request_seq": 7,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         },
                         {
                             "id": 2,
                             "name": "Thread-7"
                         }
                     ]
                 }
             }

D+00070.119: Client[1] --> {
                 "seq": 8,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 2
                 }
             }

D+00070.119: /handling #8 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 14,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 2
                 }
             }

D+00070.120: Client[1] --> {
                 "seq": 9,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00070.120: Client[1] --> {
                 "seq": 10,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 2
                 }
             }

D+00070.120: Server[1] --> {
                 "pydevd_cmd_id": 203,
                 "seq": 36,
                 "type": "event",
                 "event": "module",
                 "body": {
                     "reason": "new",
                     "module": {
                         "id": 0,
                         "name": "flask-stuff.server.routes",
                         "path": "/Users/PXH050/Projects/flask-stuff/server/routes.py",
                         "package": "flask-stuff.server"
                     }
                 }
             }

D+00070.121: Server[1] --> {
                 "pydevd_cmd_id": 203,
                 "seq": 38,
                 "type": "event",
                 "event": "module",
                 "body": {
                     "reason": "new",
                     "module": {
                         "id": 1,
                         "name": "flask.app",
                         "path": "/Users/PXH050/miniconda/envs/atlas-env/lib/python3.7/site-packages/flask/app.py",
                         "package": "flask"
                     }
                 }
             }

D+00070.121: Server[1] --> {
                 "pydevd_cmd_id": 203,
                 "seq": 40,
                 "type": "event",
                 "event": "module",
                 "body": {
                     "reason": "new",
                     "module": {
                         "id": 2,
                         "name": "flask.cli",
                         "path": "/Users/PXH050/miniconda/envs/atlas-env/lib/python3.7/site-packages/flask/cli.py",
                         "package": "flask"
                     }
                 }
             }

D+00070.121: Server[1] --> {
                 "pydevd_cmd_id": 203,
                 "seq": 42,
                 "type": "event",
                 "event": "module",
                 "body": {
                     "reason": "new",
                     "module": {
                         "id": 3,
                         "name": "werkzeug.serving",
                         "path": "/Users/PXH050/miniconda/envs/atlas-env/lib/python3.7/site-packages/werkzeug/serving.py",
                         "package": "werkzeug"
                     }
                 }
             }

D+00070.122: Server[1] --> {
                 "pydevd_cmd_id": 203,
                 "seq": 44,
                 "type": "event",
                 "event": "module",
                 "body": {
                     "reason": "new",
                     "module": {
                         "id": 4,
                         "name": "http.server",
                         "path": "/Users/PXH050/miniconda/envs/atlas-env/lib/python3.7/http/server.py",
                         "version": "0.6",
                         "package": "http"
                     }
                 }
             }

D+00070.122: Server[1] --> {
                 "pydevd_cmd_id": 203,
                 "seq": 46,
                 "type": "event",
                 "event": "module",
                 "body": {
                     "reason": "new",
                     "module": {
                         "id": 5,
                         "name": "socketserver",
                         "path": "/Users/PXH050/miniconda/envs/atlas-env/lib/python3.7/socketserver.py",
                         "version": "0.4"
                     }
                 }
             }

D+00070.122: Server[1] --> {
                 "pydevd_cmd_id": 203,
                 "seq": 48,
                 "type": "event",
                 "event": "module",
                 "body": {
                     "reason": "new",
                     "module": {
                         "id": 6,
                         "name": "threading",
                         "path": "/Users/PXH050/miniconda/envs/atlas-env/lib/python3.7/threading.py"
                     }
                 }
             }

D+00070.123: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 50,
                 "type": "response",
                 "request_seq": 14,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "login",
                             "line": 15,
                             "column": 1,
                             "source": {
                                 "path": "/Users/PXH050/Projects/flask-stuff/server/routes.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 1
                 }
             }

D+00070.123: /handling #8 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 17,
                 "type": "response",
                 "request_seq": 8,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "login",
                             "line": 15,
                             "column": 1,
                             "source": {
                                 "path": "/Users/PXH050/Projects/flask-stuff/server/routes.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 1
                 }
             }

D+00070.123: /handling #36 event "module" from Server[1]/
             Client[1] <-- {
                 "seq": 18,
                 "type": "event",
                 "event": "module",
                 "body": {
                     "reason": "new",
                     "module": {
                         "id": 0,
                         "name": "flask-stuff.server.routes",
                         "path": "/Users/PXH050/Projects/flask-stuff/server/routes.py",
                         "package": "flask-stuff.server"
                     }
                 }
             }

D+00070.124: /handling #9 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 15,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00070.128: Client[1] --> {
                 "seq": 11,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 3
                 }
             }

D+00070.632: Server[1] --> {
                 "pydevd_cmd_id": 203,
                 "seq": 52,
                 "type": "event",
                 "event": "module",
                 "body": {
                     "reason": "new",
                     "module": {
                         "id": 7,
                         "name": "selectors",
                         "path": "/Users/PXH050/miniconda/envs/atlas-env/lib/python3.7/selectors.py"
                     }
                 }
             }

D+00070.646: Server[1] --> {
                 "pydevd_cmd_id": 203,
                 "seq": 54,
                 "type": "event",
                 "event": "module",
                 "body": {
                     "reason": "new",
                     "module": {
                         "id": 8,
                         "name": "click.core",
                         "path": "/Users/PXH050/miniconda/envs/atlas-env/lib/python3.7/site-packages/click/core.py",
                         "package": "click"
                     }
                 }
             }

D+00070.647: Server[1] --> {
                 "pydevd_cmd_id": 203,
                 "seq": 56,
                 "type": "event",
                 "event": "module",
                 "body": {
                     "reason": "new",
                     "module": {
                         "id": 9,
                         "name": "click.decorators",
                         "path": "/Users/PXH050/miniconda/envs/atlas-env/lib/python3.7/site-packages/click/decorators.py",
                         "package": "click"
                     }
                 }
             }

D+00070.667: Server[1] --> {
                 "pydevd_cmd_id": 203,
                 "seq": 58,
                 "type": "event",
                 "event": "module",
                 "body": {
                     "reason": "new",
                     "module": {
                         "id": 10,
                         "name": "__main__",
                         "path": "/Users/PXH050/miniconda/envs/atlas-env/bin/flask",
                         "package": "None"
                     }
                 }
             }

D+00070.668: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 60,
                 "type": "response",
                 "request_seq": 15,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 4,
                             "name": "<module>",
                             "line": 8,
                             "column": 1,
                             "source": {
                                 "path": "/Users/PXH050/miniconda/envs/atlas-env/bin/flask",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 1
                 }
             }

D+00070.668: /handling #9 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 19,
                 "type": "response",
                 "request_seq": 9,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 4,
                             "name": "<module>",
                             "line": 8,
                             "column": 1,
                             "source": {
                                 "path": "/Users/PXH050/miniconda/envs/atlas-env/bin/flask",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 1
                 }
             }

D+00070.669: /handling #38 event "module" from Server[1]/
             Client[1] <-- {
                 "seq": 20,
                 "type": "event",
                 "event": "module",
                 "body": {
                     "reason": "new",
                     "module": {
                         "id": 1,
                         "name": "flask.app",
                         "path": "/Users/PXH050/miniconda/envs/atlas-env/lib/python3.7/site-packages/flask/app.py",
                         "package": "flask"
                     }
                 }
             }

D+00070.669: /handling #40 event "module" from Server[1]/
             Client[1] <-- {
                 "seq": 21,
                 "type": "event",
                 "event": "module",
                 "body": {
                     "reason": "new",
                     "module": {
                         "id": 2,
                         "name": "flask.cli",
                         "path": "/Users/PXH050/miniconda/envs/atlas-env/lib/python3.7/site-packages/flask/cli.py",
                         "package": "flask"
                     }
                 }
             }

D+00070.669: /handling #10 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 16,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 2
                 }
             }

D+00070.670: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 62,
                 "type": "response",
                 "request_seq": 16,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "login",
                             "line": 15,
                             "column": 1,
                             "source": {
                                 "path": "/Users/PXH050/Projects/flask-stuff/server/routes.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 1
                 }
             }

D+00070.671: /handling #10 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 22,
                 "type": "response",
                 "request_seq": 10,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "login",
                             "line": 15,
                             "column": 1,
                             "source": {
                                 "path": "/Users/PXH050/Projects/flask-stuff/server/routes.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 1
                 }
             }

D+00070.671: /handling #42 event "module" from Server[1]/
             Client[1] <-- {
                 "seq": 23,
                 "type": "event",
                 "event": "module",
                 "body": {
                     "reason": "new",
                     "module": {
                         "id": 3,
                         "name": "werkzeug.serving",
                         "path": "/Users/PXH050/miniconda/envs/atlas-env/lib/python3.7/site-packages/werkzeug/serving.py",
                         "package": "werkzeug"
                     }
                 }
             }

D+00070.671: /handling #11 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 17,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 3
                 }
             }

D+00070.672: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 64,
                 "type": "response",
                 "request_seq": 17,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 5,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 6,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00070.672: /handling #11 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 24,
                 "type": "response",
                 "request_seq": 11,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 5,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 6,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00070.673: /handling #44 event "module" from Server[1]/
             Client[1] <-- {
                 "seq": 25,
                 "type": "event",
                 "event": "module",
                 "body": {
                     "reason": "new",
                     "module": {
                         "id": 4,
                         "name": "http.server",
                         "path": "/Users/PXH050/miniconda/envs/atlas-env/lib/python3.7/http/server.py",
                         "version": "0.6",
                         "package": "http"
                     }
                 }
             }

D+00070.673: /handling #46 event "module" from Server[1]/
             Client[1] <-- {
                 "seq": 26,
                 "type": "event",
                 "event": "module",
                 "body": {
                     "reason": "new",
                     "module": {
                         "id": 5,
                         "name": "socketserver",
                         "path": "/Users/PXH050/miniconda/envs/atlas-env/lib/python3.7/socketserver.py",
                         "version": "0.4"
                     }
                 }
             }

D+00070.673: /handling #48 event "module" from Server[1]/
             Client[1] <-- {
                 "seq": 27,
                 "type": "event",
                 "event": "module",
                 "body": {
                     "reason": "new",
                     "module": {
                         "id": 6,
                         "name": "threading",
                         "path": "/Users/PXH050/miniconda/envs/atlas-env/lib/python3.7/threading.py"
                     }
                 }
             }

D+00070.674: /handling #52 event "module" from Server[1]/
             Client[1] <-- {
                 "seq": 28,
                 "type": "event",
                 "event": "module",
                 "body": {
                     "reason": "new",
                     "module": {
                         "id": 7,
                         "name": "selectors",
                         "path": "/Users/PXH050/miniconda/envs/atlas-env/lib/python3.7/selectors.py"
                     }
                 }
             }

D+00070.674: /handling #54 event "module" from Server[1]/
             Client[1] <-- {
                 "seq": 29,
                 "type": "event",
                 "event": "module",
                 "body": {
                     "reason": "new",
                     "module": {
                         "id": 8,
                         "name": "click.core",
                         "path": "/Users/PXH050/miniconda/envs/atlas-env/lib/python3.7/site-packages/click/core.py",
                         "package": "click"
                     }
                 }
             }

D+00070.674: Client[1] --> {
                 "seq": 12,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00070.674: /handling #56 event "module" from Server[1]/
             Client[1] <-- {
                 "seq": 30,
                 "type": "event",
                 "event": "module",
                 "body": {
                     "reason": "new",
                     "module": {
                         "id": 9,
                         "name": "click.decorators",
                         "path": "/Users/PXH050/miniconda/envs/atlas-env/lib/python3.7/site-packages/click/decorators.py",
                         "package": "click"
                     }
                 }
             }

D+00070.675: Client[1] --> {
                 "seq": 13,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 6
                 }
             }

D+00070.675: /handling #58 event "module" from Server[1]/
             Client[1] <-- {
                 "seq": 31,
                 "type": "event",
                 "event": "module",
                 "body": {
                     "reason": "new",
                     "module": {
                         "id": 10,
                         "name": "__main__",
                         "path": "/Users/PXH050/miniconda/envs/atlas-env/bin/flask",
                         "package": "None"
                     }
                 }
             }

D+00070.676: /handling #12 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 18,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00070.676: Client[1] --> {
                 "seq": 14,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00070.676: Client[1] --> {
                 "seq": 15,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 6
                 }
             }

D+00070.677: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 66,
                 "type": "response",
                 "request_seq": 18,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": []
                 }
             }

D+00070.677: /handling #12 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 32,
                 "type": "response",
                 "request_seq": 12,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": []
                 }
             }

D+00070.677: /handling #13 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 19,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 6
                 }
             }

D+00070.692: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 68,
                 "type": "response",
                 "request_seq": 19,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 7
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 8
                         },
                         {
                             "name": "class variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "class variables",
                             "variablesReference": 9
                         },
                         {
                             "name": "basic_routes",
                             "value": "<flask.blueprints.Blueprint object at 0x7fcf04c94150>",
                             "type": "Blueprint",
                             "evaluateName": "basic_routes",
                             "variablesReference": 10
                         },
                         {
                             "name": "request",
                             "value": "<Request 'http://localhost:5000/login' [GET]>",
                             "type": "LocalProxy",
                             "evaluateName": "request",
                             "variablesReference": 11
                         }
                     ]
                 }
             }

D+00070.698: /handling #13 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 33,
                 "type": "response",
                 "request_seq": 13,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 7
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 8
                         },
                         {
                             "name": "class variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "class variables",
                             "variablesReference": 9
                         },
                         {
                             "name": "basic_routes",
                             "value": "<flask.blueprints.Blueprint object at 0x7fcf04c94150>",
                             "type": "Blueprint",
                             "evaluateName": "basic_routes",
                             "variablesReference": 10
                         },
                         {
                             "name": "request",
                             "value": "<Request 'http://localhost:5000/login' [GET]>",
                             "type": "LocalProxy",
                             "evaluateName": "request",
                             "variablesReference": 11
                         }
                     ]
                 }
             }

D+00070.699: /handling #14 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 20,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00070.702: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 70,
                 "type": "response",
                 "request_seq": 20,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": []
                 }
             }

D+00070.702: /handling #14 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 34,
                 "type": "response",
                 "request_seq": 14,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": []
                 }
             }

D+00070.703: /handling #15 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 21,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 6
                 }
             }

D+00070.713: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 72,
                 "type": "response",
                 "request_seq": 21,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 12
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 13
                         },
                         {
                             "name": "class variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "class variables",
                             "variablesReference": 14
                         },
                         {
                             "name": "basic_routes",
                             "value": "<flask.blueprints.Blueprint object at 0x7fcf04c94150>",
                             "type": "Blueprint",
                             "evaluateName": "basic_routes",
                             "variablesReference": 10
                         },
                         {
                             "name": "request",
                             "value": "<Request 'http://localhost:5000/login' [GET]>",
                             "type": "LocalProxy",
                             "evaluateName": "request",
                             "variablesReference": 11
                         }
                     ]
                 }
             }

D+00070.714: /handling #15 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 35,
                 "type": "response",
                 "request_seq": 15,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 12
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 13
                         },
                         {
                             "name": "class variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "class variables",
                             "variablesReference": 14
                         },
                         {
                             "name": "basic_routes",
                             "value": "<flask.blueprints.Blueprint object at 0x7fcf04c94150>",
                             "type": "Blueprint",
                             "evaluateName": "basic_routes",
                             "variablesReference": 10
                         },
                         {
                             "name": "request",
                             "value": "<Request 'http://localhost:5000/login' [GET]>",
                             "type": "LocalProxy",
                             "evaluateName": "request",
                             "variablesReference": 11
                         }
                     ]
                 }
             }

D+00079.324: Client[1] --> {
                 "seq": 16,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 2,
                     "granularity": "statement"
                 }
             }

D+00079.324: /handling #16 request "next" from Client[1]/
             Server[1] <-- {
                 "seq": 22,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 2,
                     "granularity": "statement"
                 }
             }

D+00079.325: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 74,
                 "type": "response",
                 "request_seq": 22,
                 "success": true,
                 "command": "next"
             }

D+00079.325: /handling #16 request "next" from Client[1]/
             Client[1] <-- {
                 "seq": 36,
                 "type": "response",
                 "request_seq": 16,
                 "success": true,
                 "command": "next"
             }

D+00079.343: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 76,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 2,
                     "allThreadsContinued": true
                 }
             }

D+00079.344: /handling #76 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 37,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 2,
                     "allThreadsContinued": true
                 }
             }

D+00079.344: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 78,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 2,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00079.345: /handling #78 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 38,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 2,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00079.345: Client[1] --> {
                 "seq": 17,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 2
                 }
             }

D+00079.345: /handling #17 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 23,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 2
                 }
             }

D+00079.347: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 80,
                 "type": "response",
                 "request_seq": 23,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "login",
                             "line": 18,
                             "column": 1,
                             "source": {
                                 "path": "/Users/PXH050/Projects/flask-stuff/server/routes.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 1
                 }
             }

D+00079.347: /handling #17 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 39,
                 "type": "response",
                 "request_seq": 17,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "login",
                             "line": 18,
                             "column": 1,
                             "source": {
                                 "path": "/Users/PXH050/Projects/flask-stuff/server/routes.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 1
                 }
             }

D+00079.353: Client[1] --> {
                 "seq": 18,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 3
                 }
             }

D+00079.353: /handling #18 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 24,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 3
                 }
             }

D+00079.354: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 82,
                 "type": "response",
                 "request_seq": 24,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 5,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 6,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00079.354: /handling #18 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 40,
                 "type": "response",
                 "request_seq": 18,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 5,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 6,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00079.355: Client[1] --> {
                 "seq": 19,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00079.355: /handling #19 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 25,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00079.355: Client[1] --> {
                 "seq": 20,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 6
                 }
             }

D+00079.356: Client[1] --> {
                 "seq": 21,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00079.356: Client[1] --> {
                 "seq": 22,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 6
                 }
             }

D+00079.366: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 84,
                 "type": "response",
                 "request_seq": 25,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": []
                 }
             }

D+00079.367: /handling #19 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 41,
                 "type": "response",
                 "request_seq": 19,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": []
                 }
             }

D+00079.367: /handling #20 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 26,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 6
                 }
             }

D+00079.379: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 86,
                 "type": "response",
                 "request_seq": 26,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 15
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 16
                         },
                         {
                             "name": "class variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "class variables",
                             "variablesReference": 17
                         },
                         {
                             "name": "basic_routes",
                             "value": "<flask.blueprints.Blueprint object at 0x7fcf04c94150>",
                             "type": "Blueprint",
                             "evaluateName": "basic_routes",
                             "variablesReference": 10
                         },
                         {
                             "name": "request",
                             "value": "<Request 'http://localhost:5000/login' [GET]>",
                             "type": "LocalProxy",
                             "evaluateName": "request",
                             "variablesReference": 11
                         }
                     ]
                 }
             }

D+00079.380: /handling #20 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 42,
                 "type": "response",
                 "request_seq": 20,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 15
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 16
                         },
                         {
                             "name": "class variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "class variables",
                             "variablesReference": 17
                         },
                         {
                             "name": "basic_routes",
                             "value": "<flask.blueprints.Blueprint object at 0x7fcf04c94150>",
                             "type": "Blueprint",
                             "evaluateName": "basic_routes",
                             "variablesReference": 10
                         },
                         {
                             "name": "request",
                             "value": "<Request 'http://localhost:5000/login' [GET]>",
                             "type": "LocalProxy",
                             "evaluateName": "request",
                             "variablesReference": 11
                         }
                     ]
                 }
             }

D+00079.380: /handling #21 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 27,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00079.391: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 88,
                 "type": "response",
                 "request_seq": 27,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": []
                 }
             }

D+00079.392: /handling #21 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 43,
                 "type": "response",
                 "request_seq": 21,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": []
                 }
             }

D+00079.393: /handling #22 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 28,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 6
                 }
             }

D+00079.403: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 90,
                 "type": "response",
                 "request_seq": 28,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 9
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 18
                         },
                         {
                             "name": "class variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "class variables",
                             "variablesReference": 8
                         },
                         {
                             "name": "basic_routes",
                             "value": "<flask.blueprints.Blueprint object at 0x7fcf04c94150>",
                             "type": "Blueprint",
                             "evaluateName": "basic_routes",
                             "variablesReference": 10
                         },
                         {
                             "name": "request",
                             "value": "<Request 'http://localhost:5000/login' [GET]>",
                             "type": "LocalProxy",
                             "evaluateName": "request",
                             "variablesReference": 11
                         }
                     ]
                 }
             }

D+00079.404: /handling #22 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 44,
                 "type": "response",
                 "request_seq": 22,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 9
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 18
                         },
                         {
                             "name": "class variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "class variables",
                             "variablesReference": 8
                         },
                         {
                             "name": "basic_routes",
                             "value": "<flask.blueprints.Blueprint object at 0x7fcf04c94150>",
                             "type": "Blueprint",
                             "evaluateName": "basic_routes",
                             "variablesReference": 10
                         },
                         {
                             "name": "request",
                             "value": "<Request 'http://localhost:5000/login' [GET]>",
                             "type": "LocalProxy",
                             "evaluateName": "request",
                             "variablesReference": 11
                         }
                     ]
                 }
             }

D+00080.501: Client[1] --> {
                 "seq": 23,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 2,
                     "granularity": "statement"
                 }
             }

D+00080.502: /handling #23 request "next" from Client[1]/
             Server[1] <-- {
                 "seq": 29,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 2,
                     "granularity": "statement"
                 }
             }

D+00080.502: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 92,
                 "type": "response",
                 "request_seq": 29,
                 "success": true,
                 "command": "next"
             }

D+00080.502: /handling #23 request "next" from Client[1]/
             Client[1] <-- {
                 "seq": 45,
                 "type": "response",
                 "request_seq": 23,
                 "success": true,
                 "command": "next"
             }

D+00080.521: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 94,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 2,
                     "allThreadsContinued": true
                 }
             }

D+00080.522: /handling #94 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 46,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 2,
                     "allThreadsContinued": true
                 }
             }

D+00080.528: Server[1] --> {
                 "pydevd_cmd_id": 104,
                 "seq": 96,
                 "type": "event",
                 "event": "thread",
                 "body": {
                     "reason": "exited",
                     "threadId": 2
                 }
             }

D+00080.528: /handling #96 event "thread" from Server[1]/
             Client[1] <-- {
                 "seq": 47,
                 "type": "event",
                 "event": "thread",
                 "body": {
                     "reason": "exited",
                     "threadId": 2
                 }
             }

D+00370.774: Client[1] --> {
                 "seq": 24,
                 "type": "request",
                 "command": "disconnect",
                 "arguments": {
                     "restart": false,
                     "terminateDebuggee": true
                 }
             }

I+00370.774: /handling #24 request "disconnect" from Client[1]/
             client requested "disconnect"; finalizing Session[1].

D+00370.774: /handling #24 request "disconnect" from Client[1]/
             Server[1] <-- {
                 "seq": 30,
                 "type": "request",
                 "command": "disconnect",
                 "arguments": {
                     "terminateDebuggee": true
                 }
             }

D+00370.780: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 98,
                 "type": "response",
                 "request_seq": 30,
                 "success": true,
                 "command": "disconnect"
             }

D+00370.781: /handling #24 request "disconnect" from Client[1]/
             Client[1] <-- {
                 "seq": 48,
                 "type": "event",
                 "event": "terminated"
             }

I+00370.781: /handling #24 request "disconnect" from Client[1]/
             Session[1] finalized.

D+00370.781: /handling #24 request "disconnect" from Client[1]/
             Client[1] <-- {
                 "seq": 49,
                 "type": "response",
                 "request_seq": 24,
                 "success": true,
                 "command": "disconnect"
             }

D+00370.781: Exiting message loop for channel Client[1]: No more messages

D+00370.782: Server[pid=1526] --> {
                 "pydevd_cmd_id": 129,
                 "seq": 100,
                 "type": "event",
                 "event": "terminated",
                 "body": {}
             }

D+00370.782: Closing Client[1] message stream

D+00370.782: /handling #100 event "terminated" from Server[pid=1526]/
             Closing Server[pid=1526] message stream

I+00370.782: /handling disconnect from Client[1]/
             Session[1] has ended.

D+00370.782: Exiting message loop for channel Server[pid=1526]: No more messages

I+00370.783: All debug servers disconnected; waiting for remaining sessions...

I+00370.783: All debug sessions have ended; exiting.

I+00370.783: Not logging to "<stderr>" anymore.

